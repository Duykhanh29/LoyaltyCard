/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controllers.PinController;
import Controllers.SmartCardConnection;
import Controllers.UserDataController;
import constants.AppletConstants;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import utils.AppUtils;
import utils.DateTimeUtils;
import utils.ErrorHandleUtils;
import utils.TextUtils;

/**
 *
 * @author Admin
 */
public class RegisterCard extends javax.swing.JFrame {

    /**
     * Creates new form RegisterCard
     */
    PinController pinController;
    UserDataController userDataController;
    SmartCardConnection smartCardConnection;
    byte[] imageData;

    public RegisterCard() {
        initComponents();
        this.setLocationRelativeTo(null);
        smartCardConnection = SmartCardConnection.getInstance();
        pinController = new PinController(smartCardConnection);
        userDataController = new UserDataController(smartCardConnection);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        pickAvatarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        identifierTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pinTextField = new javax.swing.JPasswordField();
        confirmPinTextField = new javax.swing.JPasswordField();
        confirmButton = new javax.swing.JButton();
        setPinButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        birthdayChooser = new com.toedter.calendar.JDateChooser();
        avatarImage = new javax.swing.JLabel();
        lb_bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("KHỞI TẠO THÔNG TIN");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 270, 37));

        pickAvatarButton.setBackground(new java.awt.Color(176, 213, 199));
        pickAvatarButton.setForeground(new java.awt.Color(0, 51, 51));
        pickAvatarButton.setText("Chọn ảnh");
        pickAvatarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickAvatarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(pickAvatarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 386, 103, 36));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Họ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 87, 81, 30));
        getContentPane().add(lastNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 250, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Ngày sinh");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 170, 81, 30));

        jLabel4.setText("CCCD");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 218, 81, 30));
        getContentPane().add(identifierTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, 250, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Giới tính");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 266, 81, 30));

        buttonGroup1.add(maleRadioButton);
        maleRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        maleRadioButton.setText("Nam");
        getContentPane().add(maleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, 57, 30));

        buttonGroup1.add(femaleRadioButton);
        femaleRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        femaleRadioButton.setText("Nữ");
        getContentPane().add(femaleRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 270, 48, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Mã PIN");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 363, 90, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Nhập lại mã PIN");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 411, 110, 30));

        pinTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pinTextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(pinTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, 250, 29));
        getContentPane().add(confirmPinTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 410, 250, 30));

        confirmButton.setBackground(new java.awt.Color(176, 213, 199));
        confirmButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        confirmButton.setForeground(new java.awt.Color(0, 51, 51));
        confirmButton.setText("Xác nhận");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });
        getContentPane().add(confirmButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 477, 125, 39));

        setPinButton.setBackground(new java.awt.Color(176, 213, 199));
        setPinButton.setForeground(new java.awt.Color(0, 51, 51));
        setPinButton.setText("Đặt mã PIN ( temp)");
        setPinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPinButtonActionPerformed(evt);
            }
        });
        getContentPane().add(setPinButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 478, -1, 39));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Số điện thoại");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 315, 81, 30));
        getContentPane().add(phoneTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, 250, 32));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Tên");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 128, 81, 30));
        getContentPane().add(firstNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, 250, 30));
        getContentPane().add(birthdayChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 250, 30));

        avatarImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/3d-avatar-cartoon-character_113255-92288.jpg"))); // NOI18N
        avatarImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(avatarImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 170, 230));

        lb_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/background_900x600.jpg"))); // NOI18N
        lb_bg.setPreferredSize(new java.awt.Dimension(1000, 1000));
        getContentPane().add(lb_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -40, 710, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pickAvatarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickAvatarButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Image Files (JPG)", "jpg");
        fileChooser.setFileFilter(filter);
        int value = fileChooser.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            BufferedImage bimage;
            try {
                bimage = ImageIO.read(file);
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                ImageIO.write(bimage, "jpg", baos);
                byte[] img = baos.toByteArray();
                if (img.length > 128000) {
                    JOptionPane.showMessageDialog(this, "Ảnh bạn chọn lớn hơn kích thước tối đa");
                } else {
                    imageData = new byte[img.length];
                    imageData = img;
                    ImageIcon imageIcon = new ImageIcon(bimage.getScaledInstance(
                            avatarImage.getWidth(), avatarImage.getHeight(), java.awt.Image.SCALE_SMOOTH));
                    avatarImage.setIcon(imageIcon);
                    JOptionPane.showMessageDialog(this, "Ảnh chọn thành công");
                }
            } catch (IOException ex) {
                Logger.getLogger(UserInfo.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            }
        }
    }//GEN-LAST:event_pickAvatarButtonActionPerformed

//    just temporary
    private void setPinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setPinButtonActionPerformed
        // TODO add your handling code here:
        try {
//            char[] pinChars = pinTextField.getPassword();
//            char[] pinConfirmChars = confirmPinTextField.getPassword();
//            String pin = new String(pinChars);
//            String confirmPin = new String(pinConfirmChars);
//            if (!pin.equals(confirmPin)) {
//                JOptionPane.showMessageDialog(this, "Mã pin không trùng khớp");
//            } else {
//                pinController.setPin(pin);
//                this.dispose();
//                InitView mainView = new InitView();
//                mainView.setVisible(true);
//            }
            String firstName = "Khánh";
            String lastName = "Đặng";
            String phone = "0987654321";
            String birthday = "02-09-2002";
            String identification = "12345678";
            boolean isSuccess = userDataController.writeUserData(firstName, lastName, phone, identification, birthday, true, "123456");
            if (isSuccess) {
                JOptionPane.showMessageDialog(this, "Khởi tạo thành công");
                this.dispose();
                InitView mainView = new InitView();
                mainView.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Khởi tạo không thành công thành công");
            }
        } catch (Exception e) {
            ErrorHandleUtils.handleErrorWithException(this, e, "");
        } finally {
        }
    }//GEN-LAST:event_setPinButtonActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        // TODO add your handling code here:
        try {
            String firstName = firstNameTextField.getText();
            String lastName = lastNameTextField.getText();
            String phone = phoneTextField.getText();
            String identification = identifierTextField.getText();
            Date date = birthdayChooser.getDate();
            String birthday = DateTimeUtils.convertDateToString(date);
            char[] pinChars = pinTextField.getPassword();
            char[] pinConfirmChars = confirmPinTextField.getPassword();
            String pin = new String(pinChars);
            String confirmPin = new String(pinConfirmChars);

            boolean isValid = validation(firstName, lastName, phone, identification, date, pin, confirmPin);

            if (isValid) {
                if (!pin.equals(confirmPin)) {
                    JOptionPane.showMessageDialog(this, "Mã pin không trùng khớp");
                } else {
                    boolean isSuccess = userDataController.writeUserData(firstName, lastName, phone, identification, birthday, maleRadioButton.isSelected(), pin);
                    if (isSuccess) {
                        JOptionPane.showMessageDialog(this, "Khởi tạo thành công");
                        this.dispose();
                        HomeView mainView = new HomeView();
                        mainView.setVisible(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Khởi tạo không thành công thành công");
                    }
                }
            }

        } catch (Exception e) {
            ErrorHandleUtils.handleErrorWithException(this, e, "");
        } finally {
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void pinTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pinTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pinTextFieldActionPerformed
    private boolean validation(String firstName, String lastName, String phone, String identification, Date date, String pin, String confirmPin) {
        if (firstName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Trường tên không được để trống");
            firstNameTextField.requestFocus();
            return false;
        }
        if (lastName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Trường họ không được để trống");
            lastNameTextField.requestFocus();
            return false;
        }

        if (phone.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Trường số điện thoại không được để trống");
            phoneTextField.requestFocus();
            return false;
        }
        
        if (!TextUtils.isValidPhone(phone)) {
            JOptionPane.showMessageDialog(null, "Số điện thoại không đúng định dạng");
            phoneTextField.requestFocus();
            return false;
        }
        
        if (identification.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Trường căn cước công dân không được để trống");
            identifierTextField.requestFocus();
            return false;
        }

        if (date == null) {
            JOptionPane.showMessageDialog(null, "Ngày sinh không hợp lệ");
            birthdayChooser.requestFocus();
            return false;
        }

        String birthday = DateTimeUtils.convertDateToString(date);
        if (birthday == null) {
            JOptionPane.showMessageDialog(null, "Ngày sinh không hợp lệ");
            birthdayChooser.requestFocus();
            return false;
        }
        if (lastName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Trường tên không được để trống");
            pinTextField.requestFocus();
            return false;
        }

        if (pin.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Mã PIN tên không được để trống");
            pinTextField.requestFocus();
            return false;
        }

        if (confirmPin.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Xác nhận mã PIN không được để trống");
            confirmPinTextField.requestFocus();
            return false;
        }

        if (pin.length() != AppletConstants.MAX_PIN_SIZE) {
            JOptionPane.showMessageDialog(this, "Mã PIN phải gồm " + AppletConstants.MAX_PIN_SIZE + " ký tự");
            pinTextField.requestFocus();
            return false;
        }
        
        String defaultPIN = AppUtils.byteArrayToText(AppletConstants.DEFAUL_PIN);
        if(pin.equals(defaultPIN))
        {
            JOptionPane.showMessageDialog(this, "Mã PIN không được trùng với mã mặc định");
            pinTextField.requestFocus();
            return false;
        }

        // image
//            if (imageData == null || imageData.length == 0) {
//                JOptionPane.showMessageDialog(this, "Bạn cần phải chọn ảnh");
//                return;
//            }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterCard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatarImage;
    private com.toedter.calendar.JDateChooser birthdayChooser;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton confirmButton;
    private javax.swing.JPasswordField confirmPinTextField;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JTextField identifierTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel lb_bg;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JButton pickAvatarButton;
    private javax.swing.JPasswordField pinTextField;
    private javax.swing.JButton setPinButton;
    // End of variables declaration//GEN-END:variables
}

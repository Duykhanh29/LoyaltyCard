/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Controllers.SmartCardConnection;
import Controllers.UserDataController;
import DAO.UserDao;
import Models.UserData;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import utils.ImageUtils;

/**
 *
 * @author Admin
 */
public class UserInfo extends javax.swing.JFrame {

    /**
     * Creates new form UserInfo
     */
    SmartCardConnection smartCardConnection;
    UserDataController userDataController;
    UserData userData;
    UserDao userDao;

    public UserInfo() {
        initComponents();
        this.setLocationRelativeTo(null);
        smartCardConnection = SmartCardConnection.getInstance();
        userDataController = new UserDataController(smartCardConnection);
        userDao = UserDao.getInstance();
        try {
            initUserData();
        } catch (Exception ex) {
            Logger.getLogger(UserInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initUserData() throws Exception {
        userData = userDataController.readUserData();
        firstNameLabel.setText(userData.getFirstName());
        lastNameLabel.setText(userData.getLastName());
        phoneView.setText(userData.getPhone());
        genderView.setText(userData.isIsMale() ? "Nam" : "Nữ");
        identifierView.setText(userData.getIdentification());
        setBirthday(userData);
        getImageFromDB(userData.getId());

    }

    private void getImageFromDB(int id) throws IOException {
        try {
            UserData user = userDao.getUserById(id);
            if (user != null) {
                userData.setImagePath(user.getImagePath());
                userData.setPublicKey(user.getPublicKey());
                setImage(user.getImagePath());
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setImage(String filePath) {

        try {
            if (filePath != null) {
                byte[] imageBytes = ImageUtils.loadImage(filePath);
                BufferedImage image = ImageIO.read(new ByteArrayInputStream(imageBytes));
                if (image == null) {
                    JOptionPane.showMessageDialog(this, "Không thể tải ảnh từ file", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                // Lấy kích thước của avatarImage
                int width = avatarImage.getWidth();
                int height = avatarImage.getHeight();

                // Tính tỷ lệ giữ nguyên tỷ lệ gốc của hình ảnh
//            double aspectRatio = (double) image.getWidth() / image.getHeight();
                int newWidth = width;
                int newHeight = height;

                // Nếu chiều cao vượt quá kích thước của avatarImage, điều chỉnh lại
//            if (newHeight > height) {
//                newHeight = height;
//                newWidth = (int) (newHeight * aspectRatio);
//            }
                // Thay đổi kích thước hình ảnh giữ tỷ lệ gốc
                Image scaledImage = image.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);

                // Cập nhật ImageIcon
                ImageIcon imageIcon = new ImageIcon(scaledImage);
                avatarImage.setIcon(imageIcon);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cập nhật ảnh không thành công", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } finally {
        }

    }

    private void setBirthday(UserData userData) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        try {
            Date date = dateFormat.parse(userData.getBirthday());
            birthdayChooser.setDate(date);
            birthdayChooser.setEnabled(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        changeAvatarButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        identifierView = new javax.swing.JLabel();
        updateInfoButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        phoneView = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        genderView = new javax.swing.JLabel();
        birthdayChooser = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        avatarImage = new javax.swing.JLabel();
        lb_bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        changeAvatarButton.setBackground(new java.awt.Color(204, 255, 255));
        changeAvatarButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        changeAvatarButton.setText("Đổi ảnh");
        changeAvatarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeAvatarButtonActionPerformed(evt);
            }
        });
        getContentPane().add(changeAvatarButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(46, 359, 161, 37));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Thông tin cá nhân");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 26, 227, 37));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tên");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 113, 80, 32));

        firstNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(firstNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 113, 275, 32));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Họ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 163, 80, 32));

        lastNameLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(lastNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 163, 275, 32));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Ngày sinh");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 213, 71, 32));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("CCCD");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 361, 96, 32));

        identifierView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(identifierView, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 359, 275, 37));

        updateInfoButton.setBackground(new java.awt.Color(204, 255, 255));
        updateInfoButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        updateInfoButton.setText("Thay đổi thông tin");
        updateInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInfoButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateInfoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(429, 441, 208, 37));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Số điện thoại");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 309, 96, 32));

        phoneView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(phoneView, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 309, 275, 32));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Giới tính");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 263, 63, 28));

        genderView.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(genderView, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 263, 134, 28));
        getContentPane().add(birthdayChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(362, 213, 275, 32));

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setForeground(new java.awt.Color(0, 0, 51));
        jButton1.setText("Quay lại");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 107, -1));

        avatarImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/3d-avatar-cartoon-character_113255-92288.jpg"))); // NOI18N
        avatarImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(avatarImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 170, 230));

        lb_bg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Res/background_800x533.jpg"))); // NOI18N
        lb_bg.setText("jLabel8");
        getContentPane().add(lb_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void changeAvatarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeAvatarButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Image Files (JPG, PNG)", "jpg", "png");
        fileChooser.setFileFilter(filter);
        int value = fileChooser.showOpenDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            String fileName = file.getName(); // Chỉ lấy tên file (ví dụ: "example.jpg")
            String filePath = file.getAbsolutePath();
            BufferedImage bimage;
            try {
                bimage = ImageIO.read(file);
                if (bimage == null) {
                    JOptionPane.showMessageDialog(this, "Không thể đọc ảnh từ file", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                boolean isWritten = ImageIO.write(bimage, "jpg", baos);
                if (!isWritten) {
                    JOptionPane.showMessageDialog(this, "Lỗi khi ghi ảnh vào bộ nhớ", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                byte[] img = baos.toByteArray();
                if (img.length > 1280000) {
                    JOptionPane.showMessageDialog(this, "Ảnh bạn chọn lớn hơn kích thước tối đa");
                } else {
                    updateImage(bimage, img, fileName);
                }
            } catch (IOException ex) {
                Logger.getLogger(UserInfo.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
            }
        }
    }//GEN-LAST:event_changeAvatarButtonActionPerformed

    private void updateImage(BufferedImage bimage, byte[] img, String fileName) throws IOException {
        try {
//            byte[] imageData = new byte[img.length];
            ImageIcon imageIcon = new ImageIcon(bimage.getScaledInstance(
                    avatarImage.getWidth(), avatarImage.getHeight(), java.awt.Image.SCALE_SMOOTH));

            String imagePath = ImageUtils.saveImage(img, fileName);
            UserData updatedUser = new UserData(userData.getFirstName(), userData.getLastName(), userData.getPhone(), userData.getIdentification(), userData.getBirthday(), userData.isIsMale(), userData.getPoints());
            updatedUser.setId(userData.getId());
            updatedUser.setPublicKey(userData.getPublicKey());
            updatedUser.setImagePath(imagePath);
            boolean isSuccess = userDao.updateUser(updatedUser);
            if (isSuccess) {
                JOptionPane.showMessageDialog(this, "Cập nhật ảnh thành công");
                avatarImage.setIcon(imageIcon);
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật ảnh không thành công", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cập nhật ảnh không thành công", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } finally {
        }

    }
    private void updateInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInfoButtonActionPerformed
        // TODO add your handling code here:
        if (userData != null) {
            this.dispose();
            UpdateUserInfo updateUserInfoView = new UpdateUserInfo(userData);
            updateUserInfoView.setVisible(true);
        }
    }//GEN-LAST:event_updateInfoButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        HomeView homeView = new HomeView();
        this.dispose();
        homeView.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avatarImage;
    private com.toedter.calendar.JDateChooser birthdayChooser;
    private javax.swing.JButton changeAvatarButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel genderView;
    private javax.swing.JLabel identifierView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel lb_bg;
    private javax.swing.JLabel phoneView;
    private javax.swing.JButton updateInfoButton;
    // End of variables declaration//GEN-END:variables
}
